import disnake
from disnake.ext import commands
from pymongo import MongoClient

cluster = MongoClient('LINK')
db = cluster['ecodb']
collection = db['users']


class Economy_system (commands.Cog):
    def __init__(self,bot):
        self.bot = bot
        print('Module {} is loaded'.format(self.__class__.__name__))


    @commands.command(name='Balance',aliases = ['bal','balance','–±–∞–ª–∞–Ω—Å','cash'])
    @commands.has_any_role('üõ°Ô∏è—É—á–∞—Å—Ç–Ω–∏–∫–∏')
    async def balance(self,ctx,member:disnake.Member=None):
        if member is None:
            embed = disnake.Embed(
                title='–ë–∞–ª–∞–Ω—Å',
                description=f"–í–∞—à –±–∞–ª–∞–Ω—Å üíµ : ```{collection.find_one({'_id':ctx.author.id})['balance']}```"
            )
            await ctx.send (embed=embed)
        else:
            embed = disnake.Embed(
            title='–ë–∞–ª–∞–Ω—Å',
            description=f"–ë–∞–ª–∞–Ω—Å üíµ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention}\n ```{collection.find_one({'_id':member.id})['balance']}```")
            await ctx.send (embed=embed)

    @commands.command(name='pay',aliases = ['–ü–µ—Ä–µ–≤–æ–¥', 'transfer','—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è','–ø—ç–π'])
    async def pay(self,ctx,member:disnake.Member,count = int()):
        if collection.find_one({'_id':member.id})['balance'] < count:
            await ctx.send ('–í—ã —Å–ª–∏—à–∫–æ–º –±–µ–¥–Ω—ã –¥–ª—è —ç—Ç–æ–≥–æ')
        else :
            collection.update_one(
                {
                '_id':ctx.author.id
                },
                {
                '$set':{
                    'balance': +count
                }
                }
            )
            collection.update_one(
                {
                '_id':member.id
                },
                {
                '$set':{
                    'balance': -count
                }
                }
            )
            await ctx.send (f'{ctx.author.mention} –ø–µ—Ä–µ–≤–µ–ª {count} üíµ –¥–µ–Ω–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention} ')
            await member.send (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.mention} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º {count} üíµ –¥–µ–Ω–µ–≥')

    @commands.command(name='set',aliases = ['—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'])
    @commands.has_permissions(administrator=True)
    async def set_balance (self,ctx,member:disnake.Member=None,count = int()):
        if member is None:
            collection.update_one(
                {
                '_id':ctx.author.id
                },
                {
                '$set':{
                    'balance': +count
                }
                }
            )
            await ctx.send (f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {ctx.author.mention} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ : **{collection.find_one({'_id':member.id})['balance']}** ")
        else:
            collection.update_one(
                {
                '_id':member.id
                },
                {
                '$set':{
                    'balance': +count
                }
                }
            )
            await ctx.send (f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ : **{collection.find_one({'_id':member.id})['balance']}** ")

    @commands.command(name='pay',aliases = ['–ø–µ—Ä–µ–≤–æ–¥','transfer'])
    async def pay (self,ctx,member:disnake.Member,count = int()):
        if member == ctx.author or member is None or member.bot:
            await ctx.send ('–õ—É—á—à–µ —ç—Ç–∏ –¥–µ–Ω—å–≥–∏ —Å–æ—Ö—Ä–∞–Ω–∏ —Å–µ–±–µ)\n'
                            '–¢–≤–æ–π –ª—é–±–∏–º—ã–π —Å–æ–∑–¥–∞—Ç–µ–ª—å')
        elif collection.find_one({'_id':ctx.author.id})['balance'] < count:
            await ctx.send (f'{ctx.author.mention}, –ø—Ä–æ—Å—Ç–∏—Ç–µ ,–Ω–æ –≤—ã —Å–ª–∏—à–∫–æ–º –±–µ–¥–Ω—ã –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–ª–æ–∂–∏—Ç—å—Å—è –≤ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        else:
            collection.update_one(
                {
                    '_id':ctx.author.id
                },
                {
                '$inc': {
                    'balance': -count
                }
                }
            )
            collection.update_one(
                {
                    '_id':member.id
                },
                {
                '$inc': {
                    'balance': count
                }
                }
            )
            await ctx.send (f'–£—Å–ø–µ—à–Ω–æ! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ {count} –¥–µ–Ω–µ–≥ üíµ')
            await member.send (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.mention} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º —Å–≤–æ–∏ –ø–æ–∂–∏—Ç–∫–∏ –≤ –≤–∏–¥–µ {count} –¥–µ–Ω–µ–≥ üíµ')


    @commands.command(name='give')
    @commands.has_any_role('–Ω–∏–≥–∞–∞')
    async def give (self,ctx,member:disnake.Member,count = int()):
        if member and member.bot:
            return await ctx.send('–ù–µ–ª—å–∑—è –≤—ã–¥–∞–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ üíµ —Å–µ–±–µ / –±–æ—Ç—É')
        else:
            collection.update_one(
                {
                '_id':member.id
                },
                {
                '$inc':{
                    'balance':count
                }
                }
            )
            await ctx.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention} –≤—ã–¥–∞–Ω–æ {count} –¥–µ–Ω–µ–≥ üíµ')
        
            
        
        


def setup(bot):
    bot.add_cog(Economy_system(bot))



   
