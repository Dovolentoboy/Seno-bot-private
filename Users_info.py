import disnake
from disnake.ext import commands
from pymongo import MongoClient


cluster = MongoClient(LINK)
Warndb = cluster.Warndb
Warncoll =  Warndb.users


Economydb = cluster.ecodb
Economycoll = Economydb.users


Mutedb = cluster.Mutedb
Mutecoll = Mutedb.users


Localbandb = cluster.Localban
Localbancoll = Localbandb.users


async def check_user(ctx):
    await ctx.send('–≠—Ç–æ –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ ')

class User_info(commands.Cog):
    def __init__(self,bot):
        self.bot = bot
        print('Module {} is loaded'.format(self.__class__.__name__))


    @commands.slash_command(name='userinfo')
    @commands.has_permissions(administrator=True)
    async def userinfo(self,ctx,member:disnake.Member=None):  
        if member is None or member == ctx.author:
            embed = disnake.Embed(
            title=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ctx.author.mention}',
            description=f'–ù–∏–∂–µ –±—É–¥–µ—Ç –ø—Ä–µ—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ –≤–∞—Å \n'
                        f'\n'
                        f'–í–∞—à–∏ –ø—Ä–æ–≤–∏–Ω–Ω–æ—Å—Ç–∏üíÄ\n'
                        f'\n'
                        f'–í–∞—à–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è :\n'
                        f'\n'
                        f' ```{Warncoll.find_one({"_id":ctx.author.id})["warns"]}``` \n'
                        f'–í–∞—à–∏ –º—É—Ç—ã:\n'
                        f'\n'
                        f'```{Mutecoll.find_one({"_id":ctx.author.id})["mutes"]}```\n'
                        f'\n'
                        f'–í–∞—à–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:'
                        f'```{Localbancoll.find_one({"_id":ctx.author.id})["localban"]}```'
                        f'\n'
                        '–≠–∫–æ–Ω–æ–º–∏–∫–∞\n'
                        f'\n'
                        f'–î–µ–Ω—å–≥–∏ üíµ:'
                        f'```{Economycoll.find_one({"_id":ctx.author.id})["balance"]}```'
                        f'\n'
                        f'–í–∞—à —É—Ä–æ–≤–µ–Ω—å:'
                        f'\n'
                        f'```{Economycoll.find_one({"_id":ctx.author.id})["lvl"]}```\n'
                        '\n'
                        f'–í–∞—à –æ–ø—ã—Ç:'
                        f'\n'
                        f'```{Economycoll.find_one({"_id":ctx.author.id})["xp"]}```'
        )
        else:
            embed = disnake.Embed(
            title=f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention}',
            description=f'–ù–∏–∂–µ –±—É–¥–µ—Ç –ø—Ä–µ—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ –≤–∞—Å \n'
                        f'\n'
                        f'–í–∞—à–∏ –ø—Ä–æ–≤–∏–Ω–Ω–æ—Å—Ç–∏üíÄ\n'
                        f'\n'
                        f'–í–∞—à–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è :\n'
                        f'\n'
                        f' ```{Warncoll.find_one({"_id":member.id})["warns"]}``` \n'
                        f'–í–∞—à–∏ –º—É—Ç—ã:\n'
                        f'\n'
                        f'```{Mutecoll.find_one({"_id":member.id})["mutes"]}```\n'
                        f'\n'
                        f'–í–∞—à–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:'
                        f'```{Localbancoll.find_one({"_id":member.id})["localban"]}```'
                        f'\n'
                        '–≠–∫–æ–Ω–æ–º–∏–∫–∞\n'
                        f'\n'
                        f'–î–µ–Ω—å–≥–∏ üíµ:'
                        f'```{Economycoll.find_one({"_id":member.id})["balance"]}```'
                        f'\n'
                        f'–í–∞—à —É—Ä–æ–≤–µ–Ω—å:'
                        '\n'
                        f'```{Economycoll.find_one({"_id":member.id})["lvl"]}```\n'
                        f'\n'
                        f'–í–∞—à –æ–ø—ã—Ç:'
                        f'\n'
                        f'```{Economycoll.find_one({"_id":member.id})["xp"]}```'
        )
        
        await ctx.send(embed=embed)
           



def setup(bot):
    bot.add_cog(User_info(bot))